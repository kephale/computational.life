<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>computational.life</title>
    <link>https://computational.life/</link>
    <description>Recent content on computational.life</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 27 Jun 2021 14:38:00 +0200</lastBuildDate><atom:link href="https://computational.life/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Example neurodevelopment simulation video</title>
      <link>https://computational.life/posts/neurodevelopment-video/</link>
      <pubDate>Sun, 27 Jun 2021 14:38:00 +0200</pubDate>
      
      <guid>https://computational.life/posts/neurodevelopment-video/</guid>
      <description>This is from work that I primarily did back when I was at HHMI Janelia in 2018-2019, but kept poking at for some time after that. This is based on the work we did in the SNT paper. The rendering itself is done in sciview. What you are seeing is an agent-based model of a neurodevelopment simulation (based on Cx3D) growing in an environment defined by an image. Since I designed this to work with SNT and ImageJ, it is completely possible to load a microscopy image in and run a similar simulation.</description>
    </item>
    
    <item>
      <title>emacs setup</title>
      <link>https://computational.life/posts/emacs-setup/</link>
      <pubDate>Sun, 27 Jun 2021 14:36:02 +0200</pubDate>
      
      <guid>https://computational.life/posts/emacs-setup/</guid>
      <description>I&amp;#39;m collecting some highlights of my emacs setup so I sound less like a crazy emacs person trying to convert other scientist.
 This setup replaced my previous setup which involved:
  Google Keep for TODOs and random notes
  a Dropbox directory of markdown files with longer form notes from meetings and other random notes
  a directory of Jupyter notebook files + git repositories of notebooks (I do still use some of these for collaborative work)</description>
    </item>
    
    <item>
      <title>Developing ImageJ Code with Atom</title>
      <link>https://computational.life/tools/imagej-atom/</link>
      <pubDate>Tue, 15 May 2018 14:36:02 +0200</pubDate>
      
      <guid>https://computational.life/tools/imagej-atom/</guid>
      <description>Overview   atom-imagej-mode allows users to run ImageJ2 scripts from Atom.
 atom-imagej-mode is available [here](https://github.com/kephale/atom-imagej-mode).
  Installing atom-imagej-mode    Enable the imagej-server update site (https://imagej.net/ImageJ_Server) in Fiji
  In Atom:   Packages \ Settings View \ Install Packages/Themes
  Search for:   atom-imagej-mode
  Install the package
  In Atom:   Packages \ Settings View \ Manage Packages</description>
    </item>
    
    <item>
      <title>Spacetime plotting of chemical circuits</title>
      <link>https://computational.life/image/spacetime_nor_gate/</link>
      <pubDate>Tue, 15 May 2018 14:36:02 +0200</pubDate>
      
      <guid>https://computational.life/image/spacetime_nor_gate/</guid>
      <description>Back in 2010 Michael Heymann and I had a pretty wild idea about creating micron-scale chemical circuits with the Belousov-Zhabotinsky (BZ) reaction. We were familiar with Oli Steinbock&amp;#39;s and Andy Adamatzky&amp;#39;s (and their respective collaborators) fantastic work on creating millimeter-scale circuits using traveling waves, but wanted to compute at an even smaller scale. Being at Brandeis at the right time, we were talking Masa Toiya, Vladimir Vanag, and Irv Epstein who had just published their demonstration of inhibitory coupling between BZ microdroplets.</description>
    </item>
    
    <item>
      <title>Controlling swarms</title>
      <link>https://computational.life/swarms/controlling-swarms/</link>
      <pubDate>Fri, 01 Dec 2017 14:36:02 +0200</pubDate>
      
      <guid>https://computational.life/swarms/controlling-swarms/</guid>
      <description>Control a 3D swarm with your mouse in Clojure. After cloning and starting this project with your favorite git/Clojure tool, your mouse controls an attractor for the swarm. Move your mouse over the window to reposition the sphere representation of the attractor.
 Full repository: https://github.com/brevis-us/brevis.example.swarm-follower
 For setup information see:
 http://computational.life/2015/11/26/a-simple-3d-swarm-in-clojure/</description>
    </item>
    
    <item>
      <title>FunImage figure</title>
      <link>https://computational.life/graphics/funimage-figure/</link>
      <pubDate>Fri, 01 Dec 2017 14:36:02 +0200</pubDate>
      
      <guid>https://computational.life/graphics/funimage-figure/</guid>
      <description>Some of you may know that I am not a fan of doing things manually, sometimes to the point of spending many-many factors more time on automation than would be necessary to manually complete a task. Luckily this is not one of those cases.
 Example usage is: https://gist.github.com/kephale/d91b2232cd93b951af96
 Version as of this post is [funimage.figure &amp;#34;0.1.3&amp;#34;]
 The full repository is available here: https://github.com/kephale/funimage.figure</description>
    </item>
    
    <item>
      <title>Moire effect</title>
      <link>https://computational.life/visual/moire-effect/</link>
      <pubDate>Fri, 01 Dec 2017 14:36:02 +0200</pubDate>
      
      <guid>https://computational.life/visual/moire-effect/</guid>
      <description>&amp;lt;img class=&amp;#34;alignnone size-full wp-image-116&amp;#34; src=&amp;#34;img/moire-effect-animated1.gif&amp;#34; alt=&amp;#34;moire-effect-animated&amp;#34; width=&amp;#34;500&amp;#34; height=&amp;#34;500&amp;#34; /&amp;gt;
 Example of Moiré effect. Each frame is a step of rotation.
 The Moiré effect on random dots was developed to illustrate the effect of local correlations on visual perception by Leon Glass (Glass, 1969). Glass first demonstrated the effect using a copy machine and copying a piece of paper with random noise. Local linear patterns are observed for small rotations.</description>
    </item>
    
    <item>
      <title>Simple Swarm</title>
      <link>https://computational.life/swarms/simple-swarm/</link>
      <pubDate>Fri, 01 Dec 2017 14:36:02 +0200</pubDate>
      
      <guid>https://computational.life/swarms/simple-swarm/</guid>
      <description>Swarming and flocking is a fascinating emergent behavior. Agents that follow simple rules, such as stay close to your neighbor (but not too close), can lead to emergent phenomena when many agents are combined together.
 Here you can see a simple 3D swarm simulation implemented in Clojure with the brevis library. With just over 100 lines of code we can have a 3D swarm.
 The full repository is available: https://github.</description>
    </item>
    
    <item>
      <title>About</title>
      <link>https://computational.life/about/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://computational.life/about/</guid>
      <description>computational.life is maintained by Kyle Harrington.</description>
    </item>
    
    <item>
      <title>Imprint</title>
      <link>https://computational.life/imprint/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://computational.life/imprint/</guid>
      <description>Impressum
 Angaben gemäß § 5 TMG
 Dr. Kyle I. Harrington Group Leader MAX-DELBRÜCK-CENTRUM FÜR MOLEKULARE MEDIZIN in der Helmholtz-Gemeinschaft Robert-Rössle-Straße 10 13125 Berlin, Germany Office tel.: +49 030 94062195 Email: kyle.harrington at mdc-berlin dot de Redaktionsverantwortlicher nach § 55 Abs. 2 RStV für computational.life
 Haftungshinweis Diese Website beinhaltet Informationen von Dr. Kyle Harrington. Unser Ziel ist es, zeitgemäße und genaue Informationen bereitzustellen. Wenn wir über Fehler in Kenntnis gesetzt werden, werden wir versuchen, diese zu korrigieren.</description>
    </item>
    
    <item>
      <title>Terms and Privacy Policy</title>
      <link>https://computational.life/privacy-policy/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://computational.life/privacy-policy/</guid>
      <description>Privacy Policy
 The privacy of my visitors is extremely important. This Privacy Policy outlines the types of personal information that is received and collected and how it is used.
 First and foremost, I will never share your email address or any other personal information to anyone without your direct consent.
  Definitions
  The privacy policy of the Max Delbrück Center for Molecular Medicine is based on the terms used by the European legislator in the adoption of the Basic Regulation on Data Protection (DSGVO).</description>
    </item>
    
  </channel>
</rss>
