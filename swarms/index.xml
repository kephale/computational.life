<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Swarms on computational.life</title>
    <link>https://computational.life/swarms/</link>
    <description>Recent content in Swarms on computational.life</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language><atom:link href="https://computational.life/swarms/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Controlling swarms</title>
      <link>https://computational.life/swarms/controlling-swarms/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://computational.life/swarms/controlling-swarms/</guid>
      <description>Control a 3D swarm with your mouse in Clojure. After cloning and starting this project with your favorite git/Clojure tool, your mouse controls an attractor for the swarm. Move your mouse over the window to reposition the sphere representation of the attractor.
 Full repository: https://github.com/brevis-us/brevis.example.swarm-follower
 For setup information see:
 http://computational.life/2015/11/26/a-simple-3d-swarm-in-clojure/</description>
    </item>
    
    <item>
      <title>Simple swarm</title>
      <link>https://computational.life/swarms/simple-swarm/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://computational.life/swarms/simple-swarm/</guid>
      <description>Swarming and flocking is a fascinating emergent behavior. Agents that follow simple rules, such as stay close to your neighbor (but not too close), can lead to emergent phenomena when many agents are combined together.
 Here you can see a simple 3D swarm simulation implemented in Clojure with the brevis library. With just over 100 lines of code we can have a 3D swarm.
 The full repository is available: https://github.</description>
    </item>
    
  </channel>
</rss>
